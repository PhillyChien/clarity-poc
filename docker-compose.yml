services:
  postgres:
    image: postgres:16-alpine
    container_name: clarity-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-clarity_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - clarity-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: clarity-backend
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-clarity_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS:-86400000}
      JWT_KID: ${JWT_KID:-646b2b4576e3e06abfcee95c8e7d19f2}
      # Disable Hibernate auto DDL, using Flyway instead
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      # Flyway migration settings
      SPRING_FLYWAY_ENABLED: ${FLYWAY_ENABLED:-true}
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: ${FLYWAY_BASELINE_ON_MIGRATE:-true}
      # CORS settings
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173,http://localhost:80,http://localhost,http://frontend,http://clarity-frontend
    networks:
      - clarity-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8080}
    container_name: clarity-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8080}
    networks:
      - clarity-network

volumes:
  postgres_data:

networks:
  clarity-network:
    driver: bridge 